import{Observable}from"./misc.js";import*as Random from"./random.js";function compileProgram(t,e){let r=Object.keys(e).map(r=>{let i=t.createShader(t[r]);if(t.shaderSource(i,e[r]),t.compileShader(i),!t.getShaderParameter(i,t.COMPILE_STATUS))throw t.deleteShader(i),new Error(t.getShaderInfoLog(i));return i}),i=t.createProgram();if(r.forEach(e=>t.attachShader(i,e)),t.linkProgram(i),r.forEach(e=>{t.detachShader(i,e),t.deleteShader(e)}),!t.getProgramParameter(i,t.LINK_STATUS))throw t.deleteProgram(i),new Error(t.getProgramInfoLog(i));return i}function getGL(t){let e;try{e=t.getContext("webgl")}catch(r){e=t.getContext("experimental-webgl")}if(!e)throw new Error("Unable to get WebGL context");return e}export class ShaderView extends Observable{constructor(t,e){super(),this.canvas=t,this.uniforms={},this.scale=1,this.gl=getGL(t),this.resize(),window.addEventListener("resize",this.resize.bind(this)),this.prog=compileProgram(this.gl,{VERTEX_SHADER:"\n\t\t\t\tattribute vec3 vert;\n\t\t\t\tvoid main(void) {\n\t\t\t\t\tgl_Position = vec4(vert, 1.0);\n\t\t\t\t}\n\t\t\t",FRAGMENT_SHADER:e}),this.gl.useProgram(this.prog),this.gl.enableVertexAttribArray(this.gl.getAttribLocation(this.prog,"vert"));this.square=this.gl.createBuffer(),this.square.itemSize=3,this.square.numItems=4,this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.square),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([-1,-1,0,1,-1,0,-1,1,0,1,1,0]),this.gl.STATIC_DRAW),this.gl.vertexAttribPointer(this.gl.getAttribLocation(this.prog,"vert"),this.square.itemSize,this.gl.FLOAT,!1,0,0);let r=performance.now()/1e3;(function t(){requestAnimationFrame(()=>{const e=performance.now()/1e3;1/(e-r)<10&&(this.scale=Math.max(this.scale/2,.03),this.resize()),r=e,this.render(),t.call(this)})}).call(this)}resize(){const t=this.canvas.clientWidth,e=this.canvas.clientHeight;this.canvas.width=t*this.scale,this.canvas.height=e*this.scale,this.gl.viewport(0,0,t,e),this.trigger("resize",{width:t,height:e})}uniform(t){return this.uniforms[t]||(this.uniforms[t]=this.gl.getUniformLocation(this.prog,t))}render(){this.trigger("pre-render"),this.gl.uniform1f(this.uniform("time"),performance.now()/1e3),this.gl.uniform1f(this.uniform("scale"),this.scale),this.gl.uniform2f(this.uniform("resolution"),this.canvas.width,this.canvas.height),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,this.square.numItems)}}